#!/usr/bin/env python

"""
Plots 3D pseudoparticle trajectories from files generated by PPTrajectory::toXML.
"""

import matplotlib
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import xml.etree.ElementTree as ET
import os, sys, collections

### Parse XML data
# Container for point data
PPoint = collections.namedtuple('PPoint', ['r', 'th', 'phi', 'e', 't'])

# Path to trajectory
trajPath = sys.argv[1]

# Parse the XML
root = ET.parse(trajPath).getroot()

# Put simulation parameters into a dictionary, for now
params = {}

for param in root.find('params').iter().next():
    params[param.tag] = float(param.text)

# Put points into a list ordered by ascending values of t.
points = []

for point in root.find('points').findall('point'):
    points.append(PPoint(float(point.find('r').text), float(point.find('th').text),
        float(point.find('phi').text), float(point.find('e').text), float(point.find('t').text)))

# Convert positions from spherical to cartesian coordinates
xt = []
yt = []
zt = []

for point in points:
    xt.append(point.r * np.sin(point.th) * np.cos(point.phi))
    yt.append(point.r * np.sin(point.th) * np.sin(point.phi))
    zt.append(point.r * np.cos(point.th))

### Plot trajectory
# Set up axes
fig = plt.figure()
trajAx = fig.add_subplot(1, 1, 1, projection='3d')

# Distances of planets from sun in AU
orbits = {'Mercury' : 0.39, 'Venus' : 0.72, 'Mars' : 1.52, 'Jupiter' : 5.20, 'Saturn' : 9.54, 'Uranus' : 19.18,
        'Neptune' : 30.06}

# Number of points used for plotting planet orbits
nOrbitPoints = 100

# Plot orbits
for planet, radius in orbits.iteritems():
    trajAx.plot(radius * np.cos(np.linspace(0, 2 * np.pi, nOrbitPoints)),
            radius * np.sin(np.linspace(0, 2 * np.pi, nOrbitPoints)),
            [0] * nOrbitPoints, 'g', label = planet)

# Plot Earth's orbit
trajAx.plot(np.cos(np.linspace(0, 2 * np.pi, nOrbitPoints)),
        np.sin(np.linspace(0, 2 * np.pi, nOrbitPoints)),
        [0] * nOrbitPoints, 'r', label = 'Earth')

# Plot sun
#trajAx.plot([0], [0], [0], 'r', markersize = 100, label = 'Sun')

# Plot the points!
trajAx.plot(xt, yt, zt, 'b', label = 'Trajectory (E_0 = ' + str(points[0].e) + ')')

# Set limits to plot out to heliopause in all directions
params['rHP'] = 100
trajAx.set_xlim(-params['rHP'], params['rHP'])
trajAx.set_ylim(-params['rHP'], params['rHP'])
trajAx.set_zlim(-params['rHP'], params['rHP'])

plt.show()


